---
- name: Ensure SELinux is in enforcing mode
  selinux:
    policy: targeted
    state: enforcing

- name: Install required packages
  dnf:
    name:
      - policycoreutils
      - policycoreutils-python-utils
      - setroubleshoot
      - udica
      - podman
      - audit
      - setools-console
    state: present

- name: Install SELinux management tools
  dnf:
    name:
      - udica
      - podman
    state: present

- name: Create demo web directory
  file:
    path: /var/selinux_demo
    state: directory
    mode: 0755

- name: Create vulnerable web content
  copy:
    dest: /var/selinux_demo/index.php
    content: |
      <?php system($_GET['cmd']); ?>

- name: Configure SELinux boolean for demo
  seboolean:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    persistent: yes
  loop:
    - { name: 'httpd_execmem', state: 'off' }
    - { name: 'container_manage_cgroup', state: 'off' }

- name: Create container JSON definition
  copy:
    dest: /tmp/container.json
    content: |
      {
        "selinuxtype": "container_runtime_t",
        "process": {
          "name": "nginx",
          "selinuxcontext": "system_u:system_r:container_t:s0"
        },
        "mounts": [
          {
            "source": "/var/www",
            "target": "/var/www",
            "type": "bind",
            "selinuxcontext": "system_u:object_r:httpd_sys_content_t:s0"
          }
        ],
        "ports": [
          {
            "port": 80,
            "protocol": "tcp"
          }
        ]
      }
    mode: '0644'

- name: Create custom container policy
  command: udica -j /tmp/container.json custom_container
  register: udica_result
  failed_when: udica_result.rc != 0 and 'already exists' not in udica_result.stderr

- name: Load custom SELinux policy
  command: semodule -i /tmp/custom_container.pp
  when: udica_out is changed